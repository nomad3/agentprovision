services:
  api:
    build:
      context: .
      dockerfile: infra/docker/api.Dockerfile
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    working_dir: /app/apps/api
    volumes:
      - ./apps/api:/app/apps/api
    environment:
      APP_ENV: ${APP_ENV:-development}
      PROJECT_NAME: ${PROJECT_NAME:-AgentProvision API}
      API_V1_PREFIX: ${API_V1_PREFIX:-/api/v1}
      SECRET_KEY: ${SECRET_KEY:-local_dev_secret_key}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      DATABASE_URL: ${DATABASE_URL:-postgresql+asyncpg://postgres:postgres@db:5432/agentprovision}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
    depends_on:
      - db
      - redis
    ports:
      - "18000:18000"

  web:
    build:
      context: .
      dockerfile: infra/docker/web.Dockerfile
    working_dir: /app/apps/web
    command: sh -c "pnpm install --ignore-scripts && pnpm --filter web dev"
    volumes:
      - ./apps/web:/app/apps/web
      - ./packages:/app/packages
      - ./package.json:/app/package.json
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      - ./turbo.json:/app/turbo.json
      - ./tsconfig.json:/app/tsconfig.json
    environment:
      NEXT_PUBLIC_API_BASE_URL: ${NEXT_PUBLIC_API_BASE_URL:-http://api:8000}
    depends_on:
      - api
    ports:
      - "13000:13000"

  n8n:
    image: n8nio/n8n:1.73.0
    environment:
      N8N_PORT: ${N8N_PORT:-5678}
      N8N_PROTOCOL: ${N8N_PROTOCOL:-http}
      N8N_HOST: ${N8N_HOST:-n8n}
      N8N_BASIC_AUTH_ACTIVE: ${N8N_BASIC_AUTH_ACTIVE:-true}
      N8N_BASIC_AUTH_USER: ${N8N_BASIC_AUTH_USER:-admin}
      N8N_BASIC_AUTH_PASSWORD: ${N8N_BASIC_AUTH_PASSWORD:-changeme}
      WEBHOOK_URL: ${N8N_WEBHOOK_URL:-http://localhost:5678/}
      GENERIC_TIMEZONE: ${N8N_GENERIC_TIMEZONE:-Etc/UTC}
    volumes:
      - n8n-data:/home/node/.n8n
    ports:
      - "5678:5678"

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-agentprovision}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_HOST_PORT:-55432}:5432"

  redis:
    image: redis:7-alpine

volumes:
  postgres-data:
  n8n-data:
